1. Συνδεθείτε στην MySQL του συστήματός σας με όποιον από τους προαναφερόμενους
τρόπους επιθυμείτε.

    ~  sudo systemctl start mariadb                                          ✔ 
[sudo] password for filipposp: 
    ~  sudo mysql                                                            ✔ 
mysql: Deprecated program name. It will be removed in a future release, use '/usr/bin/mariadb' instead


2. Ελέγξτε αν υπάρχει ΒΔ με την ονομασία personnel.

MariaDB [(none)]> SHOW DATABASES;

+--------------------+
| Database           |
+--------------------+
| EXAM               |
| HEALTH             |
| classicmodels      |
| information_schema |
| mysql              |
| netprog_db_2023    |
| new_personnel      |
| new_personnel2     |
| performance_schema |
| personel           |
| personnel          |
| sakila             |
| sys                |
| test               |
| test_create        |
| world              |
+--------------------+

3. Επιλέξτε την ΒΔ personnel για χρήση.

MariaDB [(none)]> USE personnel;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

4. Δημιουργήστε τον trigger με όνομα dept_update που αφυπνίζεται από το γεγονός
"BEFORE UPDATE ON".

MariaDB [personnel]> delimiter //
MariaDB [personnel]> create TRIGGER dept_update
    -> before UPDATE ON DEPT
    -> FOR EACH ROW
    -> BEGIN
    -> SET NEW.DEPT_NAME=UPPER(NEW.DEPT_NAME);
    -> END;
    -> //
Query OK, 0 rows affected (0,012 sec)

MariaDB [personnel]> UPDATE DEPT SET DEPT_NAME = 'operation' WHERE DEPTNO=70; 

MariaDB [personnel]> SELECT * FROM DEPT;
+--------+------------+
| DEPTNO | DEPT_NAME  |
+--------+------------+
|     50 | SALES      |
|     60 | ACCOUNTING |
|     70 | OPERATION  |
+--------+------------+

5. Στον πίνακα Department θα προσθέσουμε τη στήλη no_of_employees (αριθμός υπαλλήλων που έχει το τμήμα). 

MariaDB [personnel]> ALTER TABLE DEPT ADD (NO_OF_EMP INT);
Query OK, 0 rows affected (0,017 sec)
Records: 0  Duplicates: 0  Warnings: 0

6. Στον πίνακα Department θα ενημερώσουμε τη στήλη no_of_employees (αριθμός υπαλλήλων που έχει το τμήμα). 

MariaDB [personnel]> UPDATE DEPT
    -> SET NO_OF_EMP = (SELECT COUNT(*) FROM EMP WHERE EMP.DEPTNO = DEPT.DEPTNO);
Query OK, 3 rows affected (0,005 sec)
Rows matched: 3  Changed: 3  Warnings: 0

7. Στον πίνακα Trigger που αφυπνίζεται από το γεγονός AFTER INSERT ON

MariaDB [personnel]> delimiter //
MariaDB [personnel]> create trigger emp_insert
    -> after insert on EMP
    -> for each row 
    -> begin 
    -> update DEPT
    -> set NO_OF_EMP = IFNULL(NO_OF_EMP,0) + 1
    -> where DEPTNO=NEW.DEPTNO;
    -> END;
    -> //
Query OK, 0 rows affected (0,009 sec)

8. Δοκιμή

MariaDB [personnel]> INSERT INTO EMP VALUES(50,'PAP',100,70,NULL,'2001-01-10');
Query OK, 1 row affected (0,003 sec)

MariaDB [personnel]> SELECT * FROM EMP;
    -> //
+-------+---------+-------+--------+--------+------------+
| EMPNO | NAME    | JOBNO | DEPTNO | COMM   | HIREDATE   |
+-------+---------+-------+--------+--------+------------+
|    10 | CODD    |   100 |     50 |   NULL | 2001-01-10 |
|    20 | NAVATHE |   200 |     50 | 450.00 | 1999-02-25 |
|    30 | ELMASRI |   300 |     60 |   NULL | 2000-03-17 |
|    40 | DATE    |   100 |     50 |   NULL | 1989-06-07 |
|    50 | PAP     |   100 |     70 |   NULL | 2001-01-10 |
+-------+---------+-------+--------+--------+------------+
5 rows in set (0,000 sec)

MariaDB [personnel]> SELECT * FROM DEPT;
    -> //
+--------+------------+-----------+
| DEPTNO | DEPT_NAME  | NO_OF_EMP |
+--------+------------+-----------+
|     50 | SALES      |         3 |
|     60 | ACCOUNTING |         1 |
|     70 | OPERATION  |         1 |
+--------+------------+-----------+
3 rows in set (0,000 sec)

9. Επεξήγηση
1. Ο trigger «αφυπνίζεται» λόγω της συνθήκης AFTER INSERT ON employee
2. OLD.empno<--NULL, OLD.ename<--NULL, OLD.deptno<--NULL
3. NEW.empno<-7985, NEW.ename<-’NAVATHE’, NEW.deptno<-10
Άρα η δήλωση
UPDATE department
SET no_of_employees = NVL(no_of_employees, 0) + 1
WHERE deptno= :NEW.deptno;
Είναι ισοδύναμη με τη δήλωση
UPDATE department
SET no_of_employees = NVL(no_of_employees, 0) + 1
WHERE deptno= 10;

10. Δημιουργήστε, δοκιμάστε και εξηγήστε τον trigger που αφυπνίζεται από το γεγονός AFTER
DELETE ON

MariaDB [personnel]> create trigger emp_delete 
after delete on EMP 
for each row 
begin  
UPDATE DEPT set NO_OF_EMP = IFNULL(NO_OF_EMP,0) - 1  
WHERE DEPTNO=OLD.DEPTNO; 
END;//
Query OK, 0 rows affected (0,015 sec)


MariaDB [personnel]> DELETE FROM EMP WHERE EMPNO = 50;
Query OK, 1 row affected (0,019 sec)

MariaDB [personnel]> SELECT * FROM EMP;
+-------+---------+-------+--------+--------+------------+
| EMPNO | NAME    | JOBNO | DEPTNO | COMM   | HIREDATE   |
+-------+---------+-------+--------+--------+------------+
|    10 | CODD    |   100 |     50 |   NULL | 2001-01-10 |
|    20 | NAVATHE |   200 |     50 | 450.00 | 1999-02-25 |
|    30 | ELMASRI |   300 |     60 |   NULL | 2000-03-17 |
|    40 | DATE    |   100 |     50 |   NULL | 1989-06-07 |
+-------+---------+-------+--------+--------+------------+
4 rows in set (0,000 sec)

MariaDB [personnel]> SELECT * FROM DEPT;
+--------+------------+-----------+
| DEPTNO | DEPT_NAME  | NO_OF_EMP |
+--------+------------+-----------+
|     50 | SALES      |         3 |
|     60 | ACCOUNTING |         1 |
|     70 | OPERATION  |         0 |
+--------+------------+-----------+
3 rows in set (0,000 sec)

11. Δημιουργήστε, δοκιμάστε και εξηγήστε τον trigger που αφυπνίζεται από το γεγονός AFTER
UPDATE ON


MariaDB [personnel]> delimiter //
MariaDB [personnel]> create trigger after_emp_deptno_update
    -> AFTER UPDATE ON EMP
    -> FOR EACH ROW
    -> BEGIN
    -> IF NEW.DEPTNO <> OLD.DEPTNO THEN
    -> UPDATE DEPT
    -> SET NO_OF_EMP = NO_OF_EMP - 1
    -> WHERE DEPTNO=OLD.DEPTNO;
    -> 
    -> UPDATE DEPT
    -> SET NO_OF_EMP = NO_OF_EMP + 1
    -> WHERE DEPTNO = NEW.DEPTNO;
    -> END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0,013 sec)

MariaDB [personnel]> DELIMITER ;

MariaDB [personnel]> UPDATE EMP
    -> SET DEPTNO = 60
    -> WHERE EMPNO = 10;
Query OK, 1 row affected (0,022 sec)
Rows matched: 1  Changed: 1  Warnings: 0

MariaDB [personnel]> SELECT * FROM DEPT;
+--------+------------+-----------+
| DEPTNO | DEPT_NAME  | NO_OF_EMP |
+--------+------------+-----------+
|     50 | SALES      |         2 |
|     60 | ACCOUNTING |         2 |
|     70 | OPERATION  |         0 |
+--------+------------+-----------+
3 rows in set (0,000 sec)

12. Παρουσίαση πληροφοριών για τους Triggers12. Παρουσίαση πληροφοριών για τους Triggers
/* see triggers */
DESCRIBE Information_schema.TRIGGERS;
SELECT TRIGGER_NAME, EVENT_MANIPULATION, TRIGGER_SCHEMA
FROM INFORMATION_SCHEMA.TRIGGERS
WHERE TRIGGER_SCHEMA = 'my_first_triggers_db'
ORDER BY TRIGGER_NAME;

13. Διαγραφή των Triggers

MariaDB [personnel]> drop TRIGGER after_emp_deptno_update
    -> ;
Query OK, 0 rows affected (0,007 sec)







